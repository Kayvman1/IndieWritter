{"version":3,"sources":["logo.svg","backendLookup/comps.js","poems/buttons.js","poems/lookup.js","poems/detail.js","poems/list.js","poems/create.js","poems/comps.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","JsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","responseType","open","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionBtn","props","className","poem","action","didPerformAction","actionDisplay","display","likes","handleApiActionEvent","type","onClick","event","preventDefault","poemID","id","apiPoemAction","ParentPoem","parent","Poem","hideActions","isDetail","didRepost","useState","actionPoem","setActionPoem","match","window","location","pathname","parseInt","handelPerformAction","newActionPoem","title","content","Fragment","href","ListPoem","poemsInit","setPoemsInit","poems","setPoems","poemsDidSet","setPoemsDidSet","username","useEffect","final","newPoems","concat","apiPoemList","alert","handleDidRepost","newPoem","updatedPoemsInit","unshift","updateFinalTweet","map","item","index","key","PoemCreate","titleRef","React","createRef","contentRef","didPost","handleBackendUpdate","onSubmit","current","value","ref","placeholder","required","PoemsComp","setNewPoem","canPost","postprem","tempNewPoems","PoemDetailComp","poemId","SetPoem","didLookup","setDidLookup","handleLookup","apiPoemDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a4881ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function backendLookup (method, endpoint, callback, data){\n  let JsonData\n  if (data) JsonData = JSON.stringify(data)\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  const csrftoken = getCookie('csrftoken');\n\n  xhr.responseType = \"json\"\n  xhr.open (method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n \n \n\n\n\n\n  if (csrftoken){\n   // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n   \n  xhr.onload = function(){\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function(e){\n    console.log(e)\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  \n  xhr.send(JsonData)\n\n}\n\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n","import React from 'react'\nimport {apiPoemAction} from './lookup'\n\nexport function ActionBtn(props){\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const {poem,action, didPerformAction} = props\n    const actionDisplay = action.display? action.display: 'action'\n    //eslint-disable-next-line\n    var likes = poem.likes ? poem.likes : 0\n\n    const handleApiActionEvent = (response,status)=>{\n       if ((status === 200 || status === 201)&& didPerformAction){\n        didPerformAction(response, status)\n      }  \n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiPoemAction(poem.id, action.type, handleApiActionEvent)\n     \n\n\n    }\n\n    const display = action.type === 'like' ? `${action.display} ${likes}`: actionDisplay\n     \n    return  <button className = {className}  onClick = {handleClick}>    {display} </button>\n  }\n","import {backendLookup} from '../backendLookup'\n\nexport function apiPoemAction (poemID, action, callback) {\n  backendLookup('POST', '/poems/action/', callback, {id:poemID, action:action })\n}\n\nexport function apiPoemCreate(newPoem, callback) {\n    backendLookup(\"POST\", \"/poems/create/\", callback, newPoem)\n  }\n  \nexport function apiPoemDetail (poemId, callback) {\n    const endpoint =`/poems/${poemId}`\n    backendLookup('GET', endpoint, callback)\n  }\n\n  export function apiPoemList (username, callback) {\n    let endpoint ='/poems'\n    \n    if (username) endpoint =`/poems/?username=${username}`\n      \n    backendLookup('GET', endpoint, callback)\n  }\n  ","import React, { useState} from 'react'\n//import {useEffect} from 'react'\n\nimport {ActionBtn} from './buttons'\n\nexport function ParentPoem (props) {\n    const {poem} =props \n    \n    return (poem.parent ? \n      <div className = 'row'> \n        <div id = 'PoemParent' className ={'col-11 mx-auto p-3 border rounded'}>\n          <p className = 'mb-0 text-muted small'>repost (somehow link to og post to interact with)</p> \n          <Poem poem = {poem.parent} className = {''} hideActions = {true} /> \n        </div>\n      </div> \n      :null)\n  }\n  export  function Poem(props){\n    const {poem, didRepost, hideActions} = props\n    const [actionPoem, setActionPoem] = useState(poem ? poem : null)\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    const path = window.location.pathname\n    var idRegex = /^[/](\\d+)/\n    let match = path.match(idRegex)\n    \n    var isDetail \n    if(match){\n      let urlPoemId = parseInt(match[1])\n      isDetail = (urlPoemId === poem.id)\n    }\n  \n    const handelPerformAction = (newActionPoem, status) =>{\n      if (status === 200)\n        setActionPoem(newActionPoem)\n      else if (status === 201)\n        if (didRepost)\n          didRepost(newActionPoem)\n      }\n\n    let handleShareClick = (event) => {\n      event.preventDefault()    \n      window.location.href =`/${poem.id}/`\n    }\n  \n    return (\n    <div className = {className}>\n      <div id = 'Poem'>\n        <h4>{poem.id} - {poem.title}</h4> \n        <p>{poem.content}</p>\n        <ParentPoem poem = {poem}/>\n      </div>\n    \n    <div id = 'action buttons' className = 'btn btn-group'>\n    {actionPoem && hideActions !== true &&   <React.Fragment>\n          <ActionBtn poem = {actionPoem} didPerformAction = {handelPerformAction} action ={{type:\"like\", display : 'Likes'}}/>\n          <ActionBtn poem = {actionPoem} didPerformAction = {handelPerformAction} action ={{type:\"unlike\", display: 'Unlike'}}/>\n          <ActionBtn poem = {actionPoem} didPerformAction = {handelPerformAction} action ={{type:\"repub\", display: 'Repub'}}/>\n          </React.Fragment> \n          }\n         {!isDetail && <button onClick = {handleShareClick} className = 'btn btn-outline-primary btn-sm'>View</button>\n    }</div>\n    </div>)\n  }\n  ","import React, {useEffect, useState} from 'react'\nimport {apiPoemList, } from './lookup'\nimport {Poem} from './detail'\n\nexport  function ListPoem(props){\n    const [poemsInit, setPoemsInit] = useState([])\n    const [poems, setPoems] = useState([])\n    const [poemsDidSet, setPoemsDidSet] = useState(false)\n    const {username} = props\n  \n    useEffect( ()=>{\n      const final = [...props.newPoems].concat(poemsInit)\n      if (final.length !== poems.length)\n        setPoems(final)\n    },[poemsInit, props.newPoems, poems])\n  \n    useEffect(() => {\n      if (poemsDidSet ===false){\n        const handlePoemList = (response, status) =>{\n          if(status === 200){\n            setPoemsInit(response)\n            setPoemsDidSet(true)\n          }else\n            alert (\"Debug Error src/poems/list.js\")\n        }\n        apiPoemList(username, handlePoemList)\n      }\n    }, [poemsInit, poemsDidSet, setPoemsDidSet, username] )\n  \n    const handleDidRepost = (newPoem) =>{\n      const updatedPoemsInit = [...poemsInit] \n      updatedPoemsInit.unshift (newPoem)\n      setPoemsInit (updatedPoemsInit)\n      const updateFinalTweet = [...poems ]\n      updateFinalTweet.unshift(poems)\n      setPoems(updateFinalTweet)\n    }\n    return  poems.map((item, index)=>{\n      return <Poem \n      poem = {item} \n      didRepost = {handleDidRepost}\n      className = 'my-5 py-5 border bg-white text-dark' \n      key ={`${index}-item.id`}/>\n      })\n    }\n","import React from 'react'\nimport { apiPoemCreate} from './lookup'\n\nexport function PoemCreate (props){\n    const titleRef = React.createRef()\n    const contentRef = React.createRef()\n    const {didPost} = props\n    \n    //backend api request\n    const handleSubmit = (event) =>{\n      event.preventDefault()\n      let title = titleRef.current.value\n      let content = contentRef.current.value\n      apiPoemCreate({title: title, content: content}, handleBackendUpdate)\n  \n      titleRef.current.value=''\n      contentRef.current.value=''\n    }\n    //backend api response handler\n    const handleBackendUpdate = (response, status) =>{\n      if (status ===201)\n        didPost(response)\n      else{\n        alert(\"this is debug alert 1 comps.js in src poems\\n\")\n        console.log(response)\n      }\n    }\n  \n    return (\n    <div id = 'form div' className ={props.className}>\n      <form onSubmit = {handleSubmit}>\n        <textarea ref = {titleRef} placeholder='title' className = 'form-control' name ='title' required={true}></textarea>\n        <textarea ref = {contentRef} className = 'form-control' name ='content' required ={true}></textarea>\n        <button type = 'submit' className = 'btn btn-primary my-3'> post </button>\n      </form>\n    </div>)\n  }","import React, {useEffect,useState} from 'react'\nimport {ListPoem} from './list'\nimport {PoemCreate} from './create'\n\n\nimport {Poem} from './detail'\nimport {apiPoemDetail} from './lookup'\n\n// eslint-disable-next-line\nfunction print (s){\n  console.log(s)\n}\n\n\n\nexport function PoemsComp (props){\n  const [newPoems,setNewPoem] = useState([])\n  const {username, postprem} = props\n  const canPost = postprem === \"true\" ? true : false\n\n  const handleNewPoem = (newPoem)=>{\n    let tempNewPoems = [...newPoems]\n    tempNewPoems.unshift(newPoem)\n    setNewPoem(tempNewPoems)\n  }\n\n\n  return (\n  <div className = {props.className}>\n    {\n    canPost === true && \n    <PoemCreate didPost = {handleNewPoem}  className='col-12 mb-3'/>\n    }\n    <ListPoem newPoems = {newPoems} username = {username}/>\n  </div>)\n}\n\nexport function PoemDetailComp  (props) {\n  const {poemId} = props\n  const [poem, SetPoem] = useState(null)\n  const [didLookup, setDidLookup] = useState(false)\n\n  const handleLookup = (response, status)=>{\n    if (status === 200)\n      SetPoem(response)\n    else\n      alert (\"Debug Error src/poems/comps.js\")\n    }\n  useEffect(()=>{\n    if (didLookup ===false){ \n      apiPoemDetail(poemId,handleLookup)\n      setDidLookup(true)\n    }\n  },[didLookup,setDidLookup, poemId])\n\n  return poem === null ? null : <Poem poem = {poem} className = {props.className}/>\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {PoemsComp} from './poems'\n\n\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n         <PoemsComp/>\n        </div>\n        \n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { PoemsComp, PoemDetailComp} from './poems'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"indiewritter\")\nif (tweetsEl) {\n    ReactDOM.render(\n        e(PoemsComp, tweetsEl.dataset), tweetsEl);\n}\n\n const poemDetailEls = document.querySelectorAll(\".poem-detail\")\n\n    poemDetailEls.forEach(container =>{\n        ReactDOM.render(\n            e(PoemDetailComp, container.dataset),\n        container); \n\n    })\n\n \n//tweetDetailElements.forEach(container=> {\n    //ReactDOM.render( e(PoemDetailComp, container.dataset), \n //container);\n//})\n\n \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}